{"version":3,"sources":["components/form/Button.jsx","pages/Login.jsx","actions/user.js","components/Header.jsx","services/index.js","components/form/Select.jsx","components/form/Input.jsx","components/form/Table.jsx","actions/expenses.js","pages/Wallet.jsx","actions/currencies.js","App.jsx","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["Button","this","props","nameLabel","onClick","disabled","onKeyPress","type","Component","defaultProps","PropTypes","func","Login","state","email","password","logged","handleChange","bind","handleClick","target","name","value","setState","setDataLoginStore","test","length","checkEmail","checkPassword","to","htmlFor","id","data-testid","placeholder","onChange","checkDataLogin","connect","dispatch","dataLogin","payload","addDataLogin","Header","totalExpense","expenses","reduce","acc","currency","exchangeRates","ask","toFixed","user","wallet","END_POINT","getCurrencies","a","fetch","response","json","currencies","arrCurrencies","Object","keys","console","error","getExpenses","Select","defaultOption","arrOptions","map","option","index","key","Input","label","tableHeader","Table","deleteExpense","log","expense","currencyName","rate","description","tag","method","split","btnEdit","btnDel","header","renderTableExpenses","methods","tags","Wallet","capitalFirstLetter","handleKeyPress","setCurrencies","newValue","toLowerCase","charAt","toUpperCase","slice","setExpenses","renderInputs","renderSelects","React","allCurrencies","FilteredCurrencies","filter","newState","getExpensesApiThunk","App","className","path","component","exat","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7d3d3e0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends Component {\n  render() {\n    const { nameLabel, onClick, disabled, onKeyPress } = this.props;\n    return (\n      <button\n        type=\"button\"\n        onClick={ onClick }\n        disabled={ disabled }\n        onKeyPress={ onKeyPress }\n      >\n        { nameLabel }\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  nameLabel: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onKeyPress: PropTypes.func,\n};\n\nButton.defaultProps = {\n  disabled: false,\n  onKeyPress: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addDataLogin } from '../actions/user';\nimport Button from '../components/form/Button';\n\nconst MIN_LENGTH_PASSWORDS = 6;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      logged: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClick() {\n    const { setDataLoginStore } = this.props;\n    const { email } = this.state;\n    setDataLoginStore({ email });\n    this.setState((state) => ({\n      ...state,\n      logged: true,\n    }));\n  }\n\n  checkEmail() {\n    // Lógica da validação de email https://ui.dev/validate-email-address-javascript/\n    const { email } = this.state;\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  checkPassword() {\n    const { password } = this.state;\n    return password.length >= MIN_LENGTH_PASSWORDS;\n  }\n\n  checkDataLogin() {\n    return this.checkEmail() && this.checkPassword();\n  }\n\n  render() {\n    const { email, password, logged } = this.state;\n    return (\n      logged ? <Redirect to=\"/carteira\" />\n        : (\n          <form>\n            <label htmlFor=\"email-input\">\n              <input\n                id=\"email-input\"\n                data-testid=\"email-input\"\n                type=\"email\"\n                placeholder=\"email@email.com\"\n                name=\"email\"\n                value={ email }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"password-input\">\n              <input\n                id=\"password-input\"\n                data-testid=\"password-input\"\n                type=\"password\"\n                placeholder=\"Senha\"\n                name=\"password\"\n                value={ password }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <Button\n              type=\"submit\"\n              nameLabel=\"Entrar\"\n              onClick={ this.handleClick }\n              disabled={ !this.checkDataLogin() }\n            />\n          </form>\n        )\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDataLoginStore: (dataLogin) => dispatch(addDataLogin(dataLogin)),\n});\n\nLogin.propTypes = {\n  setDataLoginStore: PropTypes.func,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const ADD_DATA_LOGIN = 'ADD_DATA_LOGIN';\n\nexport const addDataLogin = (dataLogin) => ({\n  type: ADD_DATA_LOGIN,\n  payload: dataLogin,\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// consultei o seguinte repositório como inspiração para esse componente https://github.com/tryber/sd-014-b-project-trybewallet/blob/michaelcaxias-trybewallet/src/components/Header/Header.jsx\n\nclass Header extends Component {\n  render() {\n    const { email, expenses } = this.props;\n    const totalExpense = expenses.reduce((acc, { currency, value, exchangeRates }) => (\n      acc + (value * exchangeRates[currency].ask)\n    ), 0).toFixed(2);\n    return (\n      <header>\n        <Link to=\"/\">\n          Home\n        </Link>\n        <div>\n          <span data-testid=\"email-field\">\n            Email:\n            {email}\n          </span>\n        </div>\n        <div>\n          <span>Despesa Total:</span>\n          <span data-testid=\"total-field\">\n            {`R$ ${totalExpense}`}\n          </span>\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  currencies: PropTypes.array,\n  expenses: PropTypes.array,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n","// todas as requisições da minha aplicação devem ser feitas aqui.\nconst END_POINT = 'https://economia.awesomeapi.com.br/json/all';\n\nexport const getCurrencies = async () => {\n  try {\n    const response = await fetch(END_POINT);\n    const currencies = await response.json();\n    const arrCurrencies = Object.keys(currencies);\n    return arrCurrencies;\n  } catch (erro) {\n    console.error(erro);\n  }\n};\n\nexport const getExpenses = async () => {\n  try {\n    const response = await fetch(END_POINT);\n    const currencies = await response.json();\n    return currencies;\n  } catch (erro) {\n    console.error(erro);\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Select extends Component {\n  render() {\n    const {\n      nameLabel,\n      name,\n      onChange,\n      value,\n      id,\n      defaultOption,\n      arrOptions,\n    } = this.props;\n    return (\n      <label htmlFor={ id }>\n        {nameLabel}\n        <select\n          name={ name } /* saber como usa */\n          id={ id }\n          onChange={ onChange }\n          value={ value } /* saber como usa */\n        >\n          {defaultOption && (\n            <option>\n              {defaultOption}\n            </option>)}\n          {\n            arrOptions.map((option, index) => (\n              <option key={ index }>{option}</option>\n            ))\n          }\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  nameLabel: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  arrOptions: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n  defaultOption: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Input extends Component {\n  render() {\n    const { label, onChange, onKeyPress, value, id, type = 'text' } = this.props;\n    return (\n      <label htmlFor={ id }>\n        {label}\n        <input\n          type={ type }\n          id={ id }\n          onChange={ onChange }\n          value={ value }\n          onKeyPress={ onKeyPress }\n        />\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]).isRequired,\n  id: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onKeyPress: PropTypes.func,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  onKeyPress: null,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteExpenses } from '../../actions/expenses';\n\nconst tableHeader = [\n  'Descrição',\n  'Tag',\n  'Método de pagamento',\n  'Valor',\n  'Moeda',\n  'Câmbio utilizado',\n  'Valor convertido',\n  'Moeda de conversão',\n  'Editar/Excluir',\n];\n\nclass Table extends Component {\n  btnDel(id) {\n    const { deleteExpense } = this.props;\n    deleteExpense(id);\n  }\n\n  btnEdit() {\n    console.log('Editei');\n  }\n\n  renderTableExpenses() {\n    const { expenses } = this.props;\n    return (\n      expenses.map((expense) => {\n        const { currency, exchangeRates } = expense;\n        const { [currency]: { name: currencyName, ask } } = exchangeRates;\n        const value = +expense.value;\n        const rate = +ask;\n        return (\n          <tr key={ expense.id }>\n            <td>{expense.description}</td>\n            <td>{expense.tag}</td>\n            <td>{expense.method}</td>\n            {/* <td>{`${currency} ${value.toFixed(2)}`}</td> */}\n            <td>{value}</td>\n            <td>{currencyName.split('/')[0]}</td>\n            {/* <td>{`R$ ${rate.toFixed(2)}`}</td> */}\n            <td>{rate.toFixed(2)}</td>\n            {/* <td>{`R$ ${(expense.value * rate).toFixed(2)}`}</td> */}\n            <td>{(expense.value * rate).toFixed(2)}</td>\n            <td>Real</td>\n            <td>\n              <button type=\"button\" onClick={ this.btnEdit }>Edit</button>\n              <button\n                type=\"button\"\n                onClick={ () => this.btnDel(expense.id) }\n                data-testid=\"delete-btn\"\n              >\n                Del\n              </button>\n            </td>\n          </tr>\n        );\n      })\n    );\n  }\n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            {tableHeader.map((header) => <th key={ header }>{header}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {this.renderTableExpenses()}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (state) => dispatch(deleteExpenses(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nTable.propTypes = {\n  map: PropTypes.func,\n  deleteExpense: PropTypes.func,\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.number.isRequired,\n        value: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.number,\n        ]).isRequired,\n        description: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n        method: PropTypes.string.isRequired,\n        tag: PropTypes.string.isRequired,\n        exchangeRates: PropTypes.objectOf(\n          PropTypes.shape(\n            {\n              USD: PropTypes.objectOf(\n                PropTypes.shape(\n                  {\n                    code: PropTypes.string,\n                    codein: PropTypes.string,\n                    name: PropTypes.string,\n                    high: PropTypes.string,\n                    low: PropTypes.string,\n                    varBid: PropTypes.string,\n                    pctChange: PropTypes.string,\n                    bid: PropTypes.string,\n                    ask: PropTypes.string,\n                    timestamp: PropTypes.string,\n                    create_date: PropTypes.string,\n                  },\n                ),\n              ),\n            },\n          ),\n        ),\n      },\n    ),\n  ).isRequired,\n};\n\nTable.defaultProps = {\n  map: null,\n  deleteExpense: null,\n};\n","import { getExpenses } from '../services';\n\nexport const ADD_DATA_EXPENSES = 'ADD_DATA_EXPENSES';\nexport const DELETE_EXPENSES = 'DELETE_EXPENSES';\n\nexport const addDataExpenses = (expenses) => ({\n  type: ADD_DATA_EXPENSES,\n  payload: { expenses },\n});\n\nexport const getExpensesApiThunk = (state) => async (dispatch) => {\n  const exchangeRates = await getExpenses();\n  const newState = {\n    ...state,\n    exchangeRates,\n  };\n  dispatch(addDataExpenses(newState));\n};\n\nexport const deleteExpenses = (id) => ({\n  type: DELETE_EXPENSES,\n  payload: { id },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { getCurrenciesApiThunk } from '../actions/currencies';\nimport { getExpensesApiThunk } from '../actions/expenses';\nimport Select from '../components/form/Select';\nimport Input from '../components/form/Input';\nimport Button from '../components/form/Button';\nimport Table from '../components/form/Table';\n\nconst methods = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst tags = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.capitalFirstLetter = this.capitalFirstLetter.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    const { setCurrencies } = this.props;\n    setCurrencies();\n  }\n\n  capitalFirstLetter({ target: { id, value } }) {\n    // https://attacomsian.com/blog/string-capitalize-javascript\n    const newValue = (\n      value.toLowerCase().charAt(0)\n        .toUpperCase() + value.toLowerCase().slice(1)\n    );\n    this.setState((state) => ({\n      ...state,\n      [id]: newValue,\n    }));\n  }\n\n  handleKeyPress({ key }) {\n    const { value, description } = this.state;\n    if (key === 'Enter' && value && description) {\n      return this.handleClick();\n    }\n  }\n\n  handleChange({ target: { id, value } }) {\n    this.setState((state) => ({\n      ...state,\n      [id]: value,\n    }));\n  }\n\n  async handleClick() {\n    const { setExpenses } = this.props;\n    setExpenses(this.state);\n    this.setState((state) => ({\n      ...state,\n      id: state.id + 1,\n      value: '',\n      description: '',\n    }));\n  }\n\n  renderInputs() {\n    const { value, description } = this.state;\n    return (\n      <>\n        <Input\n          label=\"Valor\"\n          type=\"number\"\n          id=\"value\"\n          value={ value }\n          onChange={ this.handleChange }\n        />\n        <Input\n          label=\"Descrição\"\n          id=\"description\"\n          value={ description }\n          onChange={ this.capitalFirstLetter }\n          onKeyPress={ this.handleKeyPress }\n        />\n      </>\n    );\n  }\n\n  renderSelects() {\n    const { currency, tag, method } = this.state;\n    const { currencies } = this.props;\n    return (\n      <>\n        <Select\n          nameLabel=\"Moedas\"\n          id=\"currency\"\n          name=\"currency\"\n          value={ currency }\n          onChange={ this.handleChange }\n          arrOptions={ currencies }\n          defaultOption=\"\"\n        />\n        <Select\n          nameLabel=\"Método de pagamento\"\n          id=\"method\"\n          name=\"method\"\n          value={ method }\n          onChange={ this.handleChange }\n          arrOptions={ methods }\n          defaultOption=\"\"\n        />\n        <Select\n          nameLabel=\"Tag\"\n          id=\"tag\"\n          name=\"tag\"\n          value={ tag }\n          onChange={ this.handleChange }\n          arrOptions={ tags }\n          defaultOption=\"\"\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <main>\n          <form>\n            {this.renderInputs()}\n            {this.renderSelects()}\n            <Button\n              nameLabel=\"Adicionar despesa\"\n              onClick={ this.handleClick }\n              onKeyPress={ this.handleKeyPress }\n            />\n          </form>\n          <Table />\n        </main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrencies: () => dispatch(getCurrenciesApiThunk()),\n  setExpenses: (state) => dispatch(getExpensesApiThunk(state)),\n\n});\n\nWallet.propTypes = {\n  currencies: PropTypes.array,\n  setCurrencies: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import { getCurrencies } from '../services';\n\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCESS';\n\nconst requestApiSuccess = (currencies) => ({\n  type: REQUEST_API_SUCCESS,\n  payload: { currencies },\n});\n\nexport const getCurrenciesApiThunk = () => async (dispatch) => {\n  const allCurrencies = await getCurrencies();\n  const FilteredCurrencies = allCurrencies\n    .filter((currency) => (currency !== 'USDT' && currency));\n  dispatch(requestApiSuccess(FilteredCurrencies));\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/carteira\" component={ Wallet } />\n        <Route exat path=\"/\" component={ Login } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_DATA_LOGIN } from '../actions/user';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case ADD_DATA_LOGIN:\n    return {\n      ...state,\n      email: action.payload.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { REQUEST_API_SUCCESS } from '../actions/currencies';\nimport { ADD_DATA_EXPENSES, DELETE_EXPENSES } from '../actions/expenses';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_API_SUCCESS: {\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  }\n  case ADD_DATA_EXPENSES: {\n    return {\n      ...state,\n      // inspirado em https://github.com/tryber/sd-014-b-project-trybewallet/blob/thomas-trybewallet/src/reducers/wallet.js\n      expenses: [...state.expenses, action.payload.expenses],\n    };\n  }\n  case DELETE_EXPENSES: {\n    const expenses = state.expenses\n      .filter((expense) => expense.id !== action.payload.id);\n    return {\n      ...state,\n      expenses,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer, composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}